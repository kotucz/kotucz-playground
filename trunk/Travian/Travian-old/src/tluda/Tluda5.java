/*
 * Tluda5.java
 *
 * Created on 21. ï¿½ervenec 2006, 17:57
 */

package tluda;

import java.awt.*;
import javax.swing.*;
import java.io.*;


/**
 *
 * @author  PC
 */
public class Tluda5 extends JPanel implements Runnable {
    
    /** Creates new form Tluda5 */
    public Tluda5() {
//        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jToolBar1 = new javax.swing.JToolBar();

        setPreferredSize(new java.awt.Dimension(320, 200));
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 320, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 200, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    static JFrame mmf;
    
        /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final Tluda5 mf = new Tluda5(); 
                mf.init();
                                
                mmf = new JFrame("Tluda5");
                mmf.setLocation(200, 200);
//                mmf.setUndecorated(true);
                mmf.add(mf);
                mmf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                mmf.pack();
                mmf.setVisible(true);
                         
                new Thread(mf).start();
            
                
            }
        });
        
        
                
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    
//}
//
//class IApplet extends javax.swing.JApplet  {
    
    Image bgimage;
    
    Downloader downloader;
    
    public void init() {
        System.out.println("init");
                 
        try {
            bgimage = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/topgirl.jpg"));//.getImage(new java.net.URL("file:///D:/topgirl.jpg"));
        } catch (Exception ex) {
            
        }
      
/*        try{
            bgimage = getImage(new java.net.URL("file:////topgirl.jpg"));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
  */
        downloader = new Downloader();
        
        System.out.println("init OK");
    }
    
    public void paint(Graphics g) {
        g.drawImage(bgimage, 0, 0, 320, 200, Color.RED, null);
        
        g.setColor(Color.GRAY);
        g.fillRect(0, 180, 320, 4);
        
        g.setColor(Color.PINK);
        g.fillRect(0, 180, (downloader.getProgress()*32/10), 4);
    
        nfo = downloader.getProgress()+"% of "+downloader.getCurrentFile()+" "+downloader.getTotalsize()+"b";
        
        g.setColor(Color.BLACK);
        g.drawString(nfo, 5, 198);
        

                        
                   
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        
                        }
        
        repaint();
        
    }
    
 
    boolean canceled = false;
    
    /**
     *  the main downloading Thread
     */
    public void run () {
        
        String[] addrs = {
            "http://www.mia-movies.com/",
            "http://www.slutsvideos.com/",
            "http://www.nastyalien.com/",
            "http://www.hornytiger.com/",
            "http://www.whorevideos.com/",
//            "http://www.amazingcum.com/",
//            "http://www.mattsvids.com/"
        };
        
        int i=-1;
        
//      println("\nto abort it press cancel in lower right corner");
        try {
                        
        for (i = 0; i<addrs.length; i++) {
            
            println(addrs[i]);

            
            
            String content = downloader.loadPage(addrs[i]);

            println(addrs[i]+" (link searching)");

            String[] pageLinks = downloader.findOpenWindowPages(addrs[i], content);            
//            String pageLink = downloader.findLinkToPage(addrs[i], content);

//            println("required link: >"+pageLink+"<");

            for (int p = 1; p<3; p++) {
                
                content = downloader.loadPage(pageLinks[p]);

                String vidLink = downloader.findLinkToVid(content);

                String part = vidLink.substring(vidLink.length()-6, vidLink.length()-4);
                
                println(addrs[i]+" part "+part);
                
                downloader.downloadFile(vidLink, "/home/tomas/Videos/serials/");
      
            }
                
        }
        
        println("finished successfully");
        terminate();
        
        } catch (Exception ex) {
            println(addrs[i]+" ERROR");
        }
        
    }
    
    private void terminate() {
//        println("terminated");
        setVisible(true);
        try {
            Thread.sleep(5000);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        System.exit(0);
    }
    
    String nfo = "";
    
    public void println(String s) {
        this.nfo=s;
        mmf.setTitle(s);
        repaint();
        System.out.println(s);
    }
          
    
}
